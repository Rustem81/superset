import requests
import json
import time

# ========================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# ========================
BASE_URL = "http://localhost:8088"
USERNAME = "admin"
PASSWORD = "admin"

# –°–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é
session = requests.Session()


# ========================
# 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
# ========================
def login():
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Superset...")
    url = f"{BASE_URL}/api/v1/security/login"
    payload = {"username": USERNAME, "password": PASSWORD, "provider": "db"}
    response = session.post(url, json=payload)
    if response.status_code != 200:
        raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
    token = response.json()["access_token"]
    session.headers.update({"Authorization": f"Bearer {token}"})
    session.headers.update({"Content-Type": "application/json"})
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")


# ========================
# 2. –ü–æ–ª—É—á–∏—Ç—å ID –¥–∞—Ç–∞—Å–µ—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
# ========================
def get_dataset_id_by_name(dataset_name):
    print(f"üîç –ò—â–µ–º –¥–∞—Ç–∞—Å–µ—Ç: {dataset_name}")
    url = f"{BASE_URL}/api/v1/dataset/"
    params = {
        "q": json.dumps(
            {
                "filters": [
                    {"col": "table_name", "opr": "eq", "value": dataset_name}
                ]
            }
        )
    }
    response = session.get(url, params=params)
    if response.status_code != 200:
        raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–∞—Ç–∞—Å–µ—Ç–∞: {response.text}")
    data = response.json()
    if data["count"] == 0:
        raise Exception(f"‚ùå –î–∞—Ç–∞—Å–µ—Ç '{dataset_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    dataset_id = data["result"][0]["id"]
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –¥–∞—Ç–∞—Å–µ—Ç '{dataset_name}' —Å ID = {dataset_id}")
    return dataset_id


# ========================
# 3. –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫
# ========================
def create_chart(dataset_id, chart_name, viz_type, form_data):
    print(f"üìà –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫: {chart_name}")
    url = f"{BASE_URL}/api/v1/chart/"
    form_data["datasource"] = f"{dataset_id}__table"
    form_data["viz_type"] = viz_type
    form_data["row_limit"] = 1000

    payload = {
        "slice_name": chart_name,
        "viz_type": viz_type,
        "datasource_type": "table",
        "datasource_id": dataset_id,
        "params": json.dumps(form_data),
        "owners": [1],
    }
    response = session.post(url, json=payload)
    if response.status_code != 201:
        raise Exception(
            f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ '{chart_name}': {response.text}"
        )
    chart_id = response.json()["id"]
    print(f"‚úÖ –ì—Ä–∞—Ñ–∏–∫ '{chart_name}' —Å–æ–∑–¥–∞–Ω (ID: {chart_id})")
    return chart_id


# ========================
# 4. –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
# ========================
if __name__ == "__main__":
    try:
        login()

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–∞—Ç–∞—Å–µ—Ç–∞
        dataset_name = "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
        try:
            dataset_id = get_dataset_id_by_name(dataset_name)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            print(
                "üí° –£–±–µ–¥–∏—Å—å, —á—Ç–æ –¥–∞—Ç–∞—Å–µ—Ç '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ Superset"
            )
            exit(1)

        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º dataset_id = {dataset_id}")

        # –°–æ–∑–¥–∞—ë–º 3 Big Number
        print("\nüìä –°–æ–∑–¥–∞—ë–º Big Number –≥—Ä–∞—Ñ–∏–∫–∏...")

        # 1. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
        create_chart(
            dataset_id=dataset_id,
            chart_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤",
            viz_type="big_number",
            form_data={
                "metric": {
                    "expressionType": "SIMPLE",
                    "column": {"column_name": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤"},
                    "aggregate": "SUM",  # COUNT(*) —É–∂–µ –ø–æ—Å—á–∏—Ç–∞–Ω, –Ω–æ Superset —Ç—Ä–µ–±—É–µ—Ç –∞–≥—Ä–µ–≥–∞—Ü–∏—é
                },
                "y_axis_format": "SMART_NUMBER",
            },
        )

        # 2. –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞
        create_chart(
            dataset_id=dataset_id,
            chart_name="–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞",
            viz_type="big_number",
            form_data={
                "metric": {
                    "expressionType": "SIMPLE",
                    "column": {"column_name": "–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞"},
                    "aggregate": "SUM",  # SUM(total) —É–∂–µ –ø–æ—Å—á–∏—Ç–∞–Ω
                },
                "y_axis_format": "SMART_NUMBER",
            },
        )

        # 3. –°—Ä–µ–¥–Ω–∏–π —á–µ–∫
        create_chart(
            dataset_id=dataset_id,
            chart_name="–°—Ä–µ–¥–Ω–∏–π —á–µ–∫",
            viz_type="big_number",
            form_data={
                "metric": {
                    "expressionType": "SIMPLE",
                    "column": {"column_name": "–°—Ä–µ–¥–Ω–∏–π —á–µ–∫"},
                    "aggregate": "AVG",  # –ó–¥–µ—Å—å AVG ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ –ø–æ –∑–∞–∫–∞–∑–∞–º
                },
                "y_axis_format": "SMART_NUMBER",
            },
        )
        print("\nüéâ –í—Å–µ 3 Big Number –≥—Ä–∞—Ñ–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print(
            f"üëâ –ü–µ—Ä–µ–π–¥–∏ –≤ Superset: {BASE_URL}/chart/list/?pageIndex=0&pageSize=25"
        )
        print(
            "   –∏ –Ω–∞–π–¥–∏ –≥—Ä–∞—Ñ–∏–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤', '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞', '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫'"
        )

    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")

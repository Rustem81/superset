import requests
import json
import time

# ========================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# ========================
BASE_URL = "http://localhost:8088"
USERNAME = "admin"
PASSWORD = "admin"

# –°–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é
session = requests.Session()


# ========================
# 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
# ========================
def login():
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Superset...")
    url = f"{BASE_URL}/api/v1/security/login"
    payload = {"username": USERNAME, "password": PASSWORD, "provider": "db"}
    response = session.post(url, json=payload)
    if response.status_code != 200:
        raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
    token = response.json()["access_token"]
    session.headers.update({"Authorization": f"Bearer {token}"})
    session.headers.update({"Content-Type": "application/json"})
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")


# ========================
# 2. –ü–æ–ª—É—á–∏—Ç—å ID –¥–∞—Ç–∞—Å–µ—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
# ========================
def get_dataset_id_by_name(dataset_name):
    print(f"üîç –ò—â–µ–º –¥–∞—Ç–∞—Å–µ—Ç: {dataset_name}")
    url = f"{BASE_URL}/api/v1/dataset/"
    params = {
        "q": json.dumps(
            {
                "filters": [
                    {"col": "table_name", "opr": "eq", "value": dataset_name}
                ]
            }
        )
    }
    response = session.get(url, params=params)
    if response.status_code != 200:
        raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–∞—Ç–∞—Å–µ—Ç–∞: {response.text}")
    data = response.json()
    if data["count"] == 0:
        raise Exception(f"‚ùå –î–∞—Ç–∞—Å–µ—Ç '{dataset_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    dataset_id = data["result"][0]["id"]
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –¥–∞—Ç–∞—Å–µ—Ç '{dataset_name}' —Å ID = {dataset_id}")
    return dataset_id


# ========================
# 3. –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫
# ========================
def create_chart(dataset_id, chart_name, viz_type, form_data):
    print(f"üìà –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫: {chart_name} ({viz_type})")
    url = f"{BASE_URL}/api/v1/chart/"
    form_data["datasource"] = f"{dataset_id}__table"
    form_data["viz_type"] = viz_type
    form_data["row_limit"] = 1000

    payload = {
        "slice_name": chart_name,
        "viz_type": viz_type,
        "datasource_type": "table",
        "datasource_id": dataset_id,
        "params": json.dumps(form_data),
        "owners": [1],
    }
    response = session.post(url, json=payload)
    if response.status_code != 201:
        raise Exception(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞: {response.text}")
    chart_id = response.json()["id"]
    print(f"‚úÖ –ì—Ä–∞—Ñ–∏–∫ '{chart_name}' —Å–æ–∑–¥–∞–Ω (ID: {chart_id})")
    return chart_id


# ========================
# 4. –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
# ========================
if __name__ == "__main__":
    try:
        login()

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–∞—Ç–∞—Å–µ—Ç–æ–≤
        dataset_revenue = get_dataset_id_by_name("–í—ã—Ä—É—á–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º")
        dataset_new_customers = get_dataset_id_by_name(
            "–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º"
        )

        # 1. –ì—Ä–∞—Ñ–∏–∫: –í—ã—Ä—É—á–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º (Bar Chart)
        print("\nüìä –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫: –í—ã—Ä—É—á–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º")
        create_chart(
            dataset_id=dataset_revenue,
            chart_name="–í—ã—Ä—É—á–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º",
            viz_type="dist_bar",
            form_data={
                "groupby": ["–°—Ç—Ä–∞–Ω–∞"],
                "metrics": [
                    {
                        "label": "–í—ã—Ä—É—á–∫–∞",
                        "expressionType": "SIMPLE",
                        "column": {"column_name": "–í—ã—Ä—É—á–∫–∞"},
                        "aggregate": "SUM",
                    }
                ],
                "y_axis_format": "SMART_NUMBER",
            },
        )

        time.sleep(2)

        # 2. –ì—Ä–∞—Ñ–∏–∫: –ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º (Time Series)
        print("\nüìÖ –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫: –ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º")
        create_chart(
            dataset_id=dataset_new_customers,
            chart_name="–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º",
            viz_type="time_series",
            form_data={
                "x_axis": "–ú–µ—Å—è—Ü",
                "metrics": [
                    {
                        "label": "–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã",
                        "expressionType": "SIMPLE",
                        "column": {"column_name": "–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã"},
                        "aggregate": "SUM",
                    }
                ],
                "y_axis_format": "SMART_NUMBER",
            },
        )

        print("\nüéâ –û–±–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print(f"üëâ –ü–µ—Ä–µ–π–¥–∏ –≤ Superset: {BASE_URL}/chart/list/")
        print("   –∏ –Ω–∞–π–¥–∏ –≥—Ä–∞—Ñ–∏–∫–∏:")
        print("   ‚Ä¢ '–í—ã—Ä—É—á–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º'")
        print("   ‚Ä¢ '–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º'")

    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
